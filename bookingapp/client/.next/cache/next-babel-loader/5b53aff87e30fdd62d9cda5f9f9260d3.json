{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\NicholasJocius\\\\Documents\\\\GitHub\\\\portfolio-magic\\\\bookingapp\\\\client\\\\context\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//setting up global state\nimport { createContext, useReducer } from 'react'; //reducer\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: action.payload\n      });\n      break;\n\n    case 'LOGOUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: null\n      });\n\n    default:\n      return state;\n      break;\n  }\n}; // initial stat\n\n\nconst initialState = {\n  user: null\n}; // create context\n\nconst Context = /*#__PURE__*/createContext({}); // context provider/used to allow entire app access to state\n\nconst Provider = ({\n  children\n}) => {\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, initialState);\n  const value = {\n    state,\n    dispatch\n  };\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 12\n  }, this);\n};\n\nexport { Context, Provider };","map":{"version":3,"sources":["C:/Users/NicholasJocius/Documents/GitHub/portfolio-magic/bookingapp/client/context/index.js"],"names":["createContext","useReducer","reducer","state","action","type","user","payload","initialState","Context","Provider","children","dispatch","value"],"mappings":";;;;;;;;;AAAA;AACA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C,C,CAGA;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAE/B,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAK,OAAL;AAEI,6CAAYF,KAAZ;AAAmBG,QAAAA,IAAI,EAAEF,MAAM,CAACG;AAAhC;AACA;;AAEJ,SAAK,QAAL;AAEI,6CAAYJ,KAAZ;AAAmBG,QAAAA,IAAI,EAAE;AAAzB;;AAEJ;AACI,aAAOH,KAAP;AACA;AAbR;AAeH,CAjBD,C,CAmBA;;;AACA,MAAMK,YAAY,GAAG;AACjBF,EAAAA,IAAI,EAAE;AADW,CAArB,C,CAIA;;AACA,MAAMG,OAAO,gBAAGT,aAAa,CAAC,EAAD,CAA7B,C,CAEA;;AACA,MAAMU,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC/B,QAAM;AAAA,OAACR,KAAD;AAAA,OAAQS;AAAR,MAAoBX,UAAU,CAACC,OAAD,EAAUM,YAAV,CAApC;AAEA,QAAMK,KAAK,GAAG;AAAEV,IAAAA,KAAF;AAASS,IAAAA;AAAT,GAAd;AAEA,sBAAO,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEC,KAAzB;AAAA,cAAiCF;AAAjC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAND;;AAQA,SAASF,OAAT,EAAkBC,QAAlB","sourcesContent":["//setting up global state\r\nimport { createContext, useReducer } from 'react';\r\n\r\n\r\n//reducer\r\nconst reducer = (state, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'LOGIN':\r\n\r\n            return { ...state, user: action.payload };\r\n            break;\r\n\r\n        case 'LOGOUT':\r\n\r\n            return { ...state, user: null };\r\n\r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n};\r\n\r\n// initial stat\r\nconst initialState = {\r\n    user: null\r\n};\r\n\r\n// create context\r\nconst Context = createContext({});\r\n\r\n// context provider/used to allow entire app access to state\r\nconst Provider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    const value = { state, dispatch };\r\n\r\n    return <Context.Provider value={value}>{children}</Context.Provider>\r\n};\r\n\r\nexport { Context, Provider };"]},"metadata":{},"sourceType":"module"}